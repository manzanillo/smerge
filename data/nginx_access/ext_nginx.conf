upstream smerge_server{
    server 127.0.0.1:8000;
}

upstream react_ext{
    server 127.0.0.1:5069;
}

upstream access{
    server 127.0.0.1:4000;
}

upstream api{
    server 127.0.0.1:8000;
}

upstream acapi{
    server 127.0.0.1:5000;
}



server {
    server_name <your-domain>;

    error_page 403 /e403.html;
        location = /e403.html {
           root   /usr/share/nginx/html;
           allow all;
       }

    location /ext/ws/ {
        include /etc/nginx/allowed_ips.conf;
        proxy_pass http://react_ext;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /ext/ {
        include /etc/nginx/allowed_ips.conf;
        proxy_pass http://react_ext;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://react_ext;
            break;
        }
    }

    location /api/ {
        include /etc/nginx/allowed_ips.conf;
        proxy_pass http://api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://api;
            break;
        }
    }


    location /acapi/ {
        proxy_pass http://acapi;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://acapi;
            break;
        }
    }


    location /access/ws/ {
        proxy_pass http://access;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /access/ {
        proxy_pass http://access;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://access;
            break;
        }
    }

    location /ws/ {
        include /etc/nginx/allowed_ips.conf;
        proxy_pass http://smerge_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location / {
        include /etc/nginx/allowed_ips.conf;
        proxy_pass http://smerge_server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://smerge_server;
            break;
        }
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/<your-domain>/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/<your-domain>/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}



server {
    if ($host = <your-domain>) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name <your-domain>;
    return 404; # managed by Certbot
}
